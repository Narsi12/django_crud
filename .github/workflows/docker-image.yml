name: Build, Push, and Deploy Docker Image to AWS ECR and ECS

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry: ${{ secrets.AWS_ECR_REGISTRY }}

    - name: Extract repository URI
      id: ecr
      run: echo "::set-output name=ecr_uri::$(aws ecr describe-repositories --repository-names ${{ secrets.AWS_ECR_REPOSITORY }} --query 'repositories[0].repositoryUri' --output text)"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Build and Tag Docker Image
      run: docker build -t ${{ steps.ecr.outputs.ecr_uri }}:latest .

    - name: Push Docker Image to ECR
      run: docker push ${{ steps.ecr.outputs.ecr_uri }}:latest

    - name: Register Task Definition
      run: |
        aws ecs register-task-definition \
          --family my-ecs-task \
          --network-mode awsvpc \
          --requires-compatibilities FARGATE \
          --cpu 256 \
          --memory 512 \
          --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
          --container-definitions '[{
              "name": "my-container",
              "image": "'${{ steps.ecr.outputs.ecr_uri }}:latest'",
              "cpu": 256,
              "memory": 512,
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 80,
                  "hostPort": 80
                }
              ],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "/ecs/my-ecs-task",
                  "awslogs-region": "${{ secrets.AWS_REGION }}",
                  "awslogs-stream-prefix": "ecs"
                }
              }
            }]'

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster my-ecs-cluster \
          --service my-ecs-service \
          --force-new-deployment
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
